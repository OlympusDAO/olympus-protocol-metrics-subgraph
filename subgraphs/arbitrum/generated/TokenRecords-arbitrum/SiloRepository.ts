// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  Address,
  BigInt,
  Bytes,
  Entity,
  ethereum,
  JSONValue,
  TypedMap} from "@graphprotocol/graph-ts";

export class AssetConfigUpdate extends ethereum.Event {
  get params(): AssetConfigUpdate__Params {
    return new AssetConfigUpdate__Params(this);
  }
}

export class AssetConfigUpdate__Params {
  _event: AssetConfigUpdate;

  constructor(event: AssetConfigUpdate) {
    this._event = event;
  }

  get silo(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get asset(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get assetConfig(): AssetConfigUpdateAssetConfigStruct {
    return changetype<AssetConfigUpdateAssetConfigStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class AssetConfigUpdateAssetConfigStruct extends ethereum.Tuple {
  get maxLoanToValue(): BigInt {
    return this[0].toBigInt();
  }

  get liquidationThreshold(): BigInt {
    return this[1].toBigInt();
  }

  get interestRateModel(): Address {
    return this[2].toAddress();
  }
}

export class BridgeAssetAdded extends ethereum.Event {
  get params(): BridgeAssetAdded__Params {
    return new BridgeAssetAdded__Params(this);
  }
}

export class BridgeAssetAdded__Params {
  _event: BridgeAssetAdded;

  constructor(event: BridgeAssetAdded) {
    this._event = event;
  }

  get newBridgeAsset(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BridgeAssetRemoved extends ethereum.Event {
  get params(): BridgeAssetRemoved__Params {
    return new BridgeAssetRemoved__Params(this);
  }
}

export class BridgeAssetRemoved__Params {
  _event: BridgeAssetRemoved;

  constructor(event: BridgeAssetRemoved) {
    this._event = event;
  }

  get bridgeAssetRemoved(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BridgePool extends ethereum.Event {
  get params(): BridgePool__Params {
    return new BridgePool__Params(this);
  }
}

export class BridgePool__Params {
  _event: BridgePool;

  constructor(event: BridgePool) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DefaultSiloMaxDepositsLimitUpdate extends ethereum.Event {
  get params(): DefaultSiloMaxDepositsLimitUpdate__Params {
    return new DefaultSiloMaxDepositsLimitUpdate__Params(this);
  }
}

export class DefaultSiloMaxDepositsLimitUpdate__Params {
  _event: DefaultSiloMaxDepositsLimitUpdate;

  constructor(event: DefaultSiloMaxDepositsLimitUpdate) {
    this._event = event;
  }

  get newMaxDeposits(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FeeUpdate extends ethereum.Event {
  get params(): FeeUpdate__Params {
    return new FeeUpdate__Params(this);
  }
}

export class FeeUpdate__Params {
  _event: FeeUpdate;

  constructor(event: FeeUpdate) {
    this._event = event;
  }

  get newEntryFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newProtocolShareFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newProtocolLiquidationFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GlobalPause extends ethereum.Event {
  get params(): GlobalPause__Params {
    return new GlobalPause__Params(this);
  }
}

export class GlobalPause__Params {
  _event: GlobalPause;

  constructor(event: GlobalPause) {
    this._event = event;
  }

  get globalPause(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class InterestRateModel extends ethereum.Event {
  get params(): InterestRateModel__Params {
    return new InterestRateModel__Params(this);
  }
}

export class InterestRateModel__Params {
  _event: InterestRateModel;

  constructor(event: InterestRateModel) {
    this._event = event;
  }

  get newModel(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LimitedMaxLiquidityToggled extends ethereum.Event {
  get params(): LimitedMaxLiquidityToggled__Params {
    return new LimitedMaxLiquidityToggled__Params(this);
  }
}

export class LimitedMaxLiquidityToggled__Params {
  _event: LimitedMaxLiquidityToggled;

  constructor(event: LimitedMaxLiquidityToggled) {
    this._event = event;
  }

  get newLimitedMaxLiquidityState(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class ManagerChanged extends ethereum.Event {
  get params(): ManagerChanged__Params {
    return new ManagerChanged__Params(this);
  }
}

export class ManagerChanged__Params {
  _event: ManagerChanged;

  constructor(event: ManagerChanged) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewDefaultLiquidationThreshold extends ethereum.Event {
  get params(): NewDefaultLiquidationThreshold__Params {
    return new NewDefaultLiquidationThreshold__Params(this);
  }
}

export class NewDefaultLiquidationThreshold__Params {
  _event: NewDefaultLiquidationThreshold;

  constructor(event: NewDefaultLiquidationThreshold) {
    this._event = event;
  }

  get defaultLiquidationThreshold(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewDefaultMaximumLTV extends ethereum.Event {
  get params(): NewDefaultMaximumLTV__Params {
    return new NewDefaultMaximumLTV__Params(this);
  }
}

export class NewDefaultMaximumLTV__Params {
  _event: NewDefaultMaximumLTV;

  constructor(event: NewDefaultMaximumLTV) {
    this._event = event;
  }

  get defaultMaximumLTV(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewSilo extends ethereum.Event {
  get params(): NewSilo__Params {
    return new NewSilo__Params(this);
  }
}

export class NewSilo__Params {
  _event: NewSilo;

  constructor(event: NewSilo) {
    this._event = event;
  }

  get silo(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get asset(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get siloVersion(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class NotificationReceiverUpdate extends ethereum.Event {
  get params(): NotificationReceiverUpdate__Params {
    return new NotificationReceiverUpdate__Params(this);
  }
}

export class NotificationReceiverUpdate__Params {
  _event: NotificationReceiverUpdate;

  constructor(event: NotificationReceiverUpdate) {
    this._event = event;
  }

  get newIncentiveContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipPending extends ethereum.Event {
  get params(): OwnershipPending__Params {
    return new OwnershipPending__Params(this);
  }
}

export class OwnershipPending__Params {
  _event: OwnershipPending;

  constructor(event: OwnershipPending) {
    this._event = event;
  }

  get newPendingOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PriceProvidersRepositoryUpdate extends ethereum.Event {
  get params(): PriceProvidersRepositoryUpdate__Params {
    return new PriceProvidersRepositoryUpdate__Params(this);
  }
}

export class PriceProvidersRepositoryUpdate__Params {
  _event: PriceProvidersRepositoryUpdate;

  constructor(event: PriceProvidersRepositoryUpdate) {
    this._event = event;
  }

  get newProvider(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RegisterSiloVersion extends ethereum.Event {
  get params(): RegisterSiloVersion__Params {
    return new RegisterSiloVersion__Params(this);
  }
}

export class RegisterSiloVersion__Params {
  _event: RegisterSiloVersion;

  constructor(event: RegisterSiloVersion) {
    this._event = event;
  }

  get factory(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get siloLatestVersion(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get siloDefaultVersion(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RouterUpdate extends ethereum.Event {
  get params(): RouterUpdate__Params {
    return new RouterUpdate__Params(this);
  }
}

export class RouterUpdate__Params {
  _event: RouterUpdate;

  constructor(event: RouterUpdate) {
    this._event = event;
  }

  get newRouter(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SiloDefaultVersion extends ethereum.Event {
  get params(): SiloDefaultVersion__Params {
    return new SiloDefaultVersion__Params(this);
  }
}

export class SiloDefaultVersion__Params {
  _event: SiloDefaultVersion;

  constructor(event: SiloDefaultVersion) {
    this._event = event;
  }

  get newDefaultVersion(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SiloMaxDepositsLimitsUpdate extends ethereum.Event {
  get params(): SiloMaxDepositsLimitsUpdate__Params {
    return new SiloMaxDepositsLimitsUpdate__Params(this);
  }
}

export class SiloMaxDepositsLimitsUpdate__Params {
  _event: SiloMaxDepositsLimitsUpdate;

  constructor(event: SiloMaxDepositsLimitsUpdate) {
    this._event = event;
  }

  get silo(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get asset(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newMaxDeposits(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SiloPause extends ethereum.Event {
  get params(): SiloPause__Params {
    return new SiloPause__Params(this);
  }
}

export class SiloPause__Params {
  _event: SiloPause;

  constructor(event: SiloPause) {
    this._event = event;
  }

  get silo(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get asset(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pauseValue(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class TokensFactoryUpdate extends ethereum.Event {
  get params(): TokensFactoryUpdate__Params {
    return new TokensFactoryUpdate__Params(this);
  }
}

export class TokensFactoryUpdate__Params {
  _event: TokensFactoryUpdate;

  constructor(event: TokensFactoryUpdate) {
    this._event = event;
  }

  get newTokensFactory(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UnregisterSiloVersion extends ethereum.Event {
  get params(): UnregisterSiloVersion__Params {
    return new UnregisterSiloVersion__Params(this);
  }
}

export class UnregisterSiloVersion__Params {
  _event: UnregisterSiloVersion;

  constructor(event: UnregisterSiloVersion) {
    this._event = event;
  }

  get factory(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get siloVersion(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VersionForAsset extends ethereum.Event {
  get params(): VersionForAsset__Params {
    return new VersionForAsset__Params(this);
  }
}

export class VersionForAsset__Params {
  _event: VersionForAsset;

  constructor(event: VersionForAsset) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get version(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SiloRepository__assetConfigsResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;

  constructor(value0: BigInt, value1: BigInt, value2: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    const map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }

  getMaxLoanToValue(): BigInt {
    return this.value0;
  }

  getLiquidationThreshold(): BigInt {
    return this.value1;
  }

  getInterestRateModel(): Address {
    return this.value2;
  }
}

export class SiloRepository__defaultAssetConfigResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;

  constructor(value0: BigInt, value1: BigInt, value2: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    const map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }

  getMaxLoanToValue(): BigInt {
    return this.value0;
  }

  getLiquidationThreshold(): BigInt {
    return this.value1;
  }

  getInterestRateModel(): Address {
    return this.value2;
  }
}

export class SiloRepository__feesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    const map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getEntryFee(): BigInt {
    return this.value0;
  }

  getProtocolShareFee(): BigInt {
    return this.value1;
  }

  getProtocolLiquidationFee(): BigInt {
    return this.value2;
  }
}

export class SiloRepository__maxLiquidityResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    const map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getGlobalLimit(): boolean {
    return this.value0;
  }

  getDefaultMaxLiquidity(): BigInt {
    return this.value1;
  }
}

export class SiloRepository__siloVersionResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    const map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getByDefault(): BigInt {
    return this.value0;
  }

  getLatest(): BigInt {
    return this.value1;
  }
}

export class SiloRepository extends ethereum.SmartContract {
  static bind(address: Address): SiloRepository {
    return new SiloRepository("SiloRepository", address);
  }

  assetConfigs(
    param0: Address,
    param1: Address
  ): SiloRepository__assetConfigsResult {
    const result = super.call(
      "assetConfigs",
      "assetConfigs(address,address):(uint64,uint64,address)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return new SiloRepository__assetConfigsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress()
    );
  }

  try_assetConfigs(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<SiloRepository__assetConfigsResult> {
    const result = super.tryCall(
      "assetConfigs",
      "assetConfigs(address,address):(uint64,uint64,address)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(
      new SiloRepository__assetConfigsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress()
      )
    );
  }

  bridgePool(): Address {
    const result = super.call("bridgePool", "bridgePool():(address)", []);

    return result[0].toAddress();
  }

  try_bridgePool(): ethereum.CallResult<Address> {
    const result = super.tryCall("bridgePool", "bridgePool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  defaultAssetConfig(): SiloRepository__defaultAssetConfigResult {
    const result = super.call(
      "defaultAssetConfig",
      "defaultAssetConfig():(uint64,uint64,address)",
      []
    );

    return new SiloRepository__defaultAssetConfigResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress()
    );
  }

  try_defaultAssetConfig(): ethereum.CallResult<
    SiloRepository__defaultAssetConfigResult
  > {
    const result = super.tryCall(
      "defaultAssetConfig",
      "defaultAssetConfig():(uint64,uint64,address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(
      new SiloRepository__defaultAssetConfigResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress()
      )
    );
  }

  entryFee(): BigInt {
    const result = super.call("entryFee", "entryFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_entryFee(): ethereum.CallResult<BigInt> {
    const result = super.tryCall("entryFee", "entryFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fees(): SiloRepository__feesResult {
    const result = super.call("fees", "fees():(uint64,uint64,uint64)", []);

    return new SiloRepository__feesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_fees(): ethereum.CallResult<SiloRepository__feesResult> {
    const result = super.tryCall("fees", "fees():(uint64,uint64,uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(
      new SiloRepository__feesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getBridgeAssets(): Array<Address> {
    const result = super.call(
      "getBridgeAssets",
      "getBridgeAssets():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getBridgeAssets(): ethereum.CallResult<Array<Address>> {
    const result = super.tryCall(
      "getBridgeAssets",
      "getBridgeAssets():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getInterestRateModel(_silo: Address, _asset: Address): Address {
    const result = super.call(
      "getInterestRateModel",
      "getInterestRateModel(address,address):(address)",
      [ethereum.Value.fromAddress(_silo), ethereum.Value.fromAddress(_asset)]
    );

    return result[0].toAddress();
  }

  try_getInterestRateModel(
    _silo: Address,
    _asset: Address
  ): ethereum.CallResult<Address> {
    const result = super.tryCall(
      "getInterestRateModel",
      "getInterestRateModel(address,address):(address)",
      [ethereum.Value.fromAddress(_silo), ethereum.Value.fromAddress(_asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getLiquidationThreshold(_silo: Address, _asset: Address): BigInt {
    const result = super.call(
      "getLiquidationThreshold",
      "getLiquidationThreshold(address,address):(uint256)",
      [ethereum.Value.fromAddress(_silo), ethereum.Value.fromAddress(_asset)]
    );

    return result[0].toBigInt();
  }

  try_getLiquidationThreshold(
    _silo: Address,
    _asset: Address
  ): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "getLiquidationThreshold",
      "getLiquidationThreshold(address,address):(uint256)",
      [ethereum.Value.fromAddress(_silo), ethereum.Value.fromAddress(_asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMaxSiloDepositsValue(_silo: Address, _asset: Address): BigInt {
    const result = super.call(
      "getMaxSiloDepositsValue",
      "getMaxSiloDepositsValue(address,address):(uint256)",
      [ethereum.Value.fromAddress(_silo), ethereum.Value.fromAddress(_asset)]
    );

    return result[0].toBigInt();
  }

  try_getMaxSiloDepositsValue(
    _silo: Address,
    _asset: Address
  ): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "getMaxSiloDepositsValue",
      "getMaxSiloDepositsValue(address,address):(uint256)",
      [ethereum.Value.fromAddress(_silo), ethereum.Value.fromAddress(_asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMaximumLTV(_silo: Address, _asset: Address): BigInt {
    const result = super.call(
      "getMaximumLTV",
      "getMaximumLTV(address,address):(uint256)",
      [ethereum.Value.fromAddress(_silo), ethereum.Value.fromAddress(_asset)]
    );

    return result[0].toBigInt();
  }

  try_getMaximumLTV(
    _silo: Address,
    _asset: Address
  ): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "getMaximumLTV",
      "getMaximumLTV(address,address):(uint256)",
      [ethereum.Value.fromAddress(_silo), ethereum.Value.fromAddress(_asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNotificationReceiver(param0: Address): Address {
    const result = super.call(
      "getNotificationReceiver",
      "getNotificationReceiver(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_getNotificationReceiver(param0: Address): ethereum.CallResult<Address> {
    const result = super.tryCall(
      "getNotificationReceiver",
      "getNotificationReceiver(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRemovedBridgeAssets(): Array<Address> {
    const result = super.call(
      "getRemovedBridgeAssets",
      "getRemovedBridgeAssets():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getRemovedBridgeAssets(): ethereum.CallResult<Array<Address>> {
    const result = super.tryCall(
      "getRemovedBridgeAssets",
      "getRemovedBridgeAssets():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getSilo(param0: Address): Address {
    const result = super.call("getSilo", "getSilo(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_getSilo(param0: Address): ethereum.CallResult<Address> {
    const result = super.tryCall("getSilo", "getSilo(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getVersionForAsset(param0: Address): BigInt {
    const result = super.call(
      "getVersionForAsset",
      "getVersionForAsset(address):(uint128)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_getVersionForAsset(param0: Address): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "getVersionForAsset",
      "getVersionForAsset(address):(uint128)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isPaused(): boolean {
    const result = super.call("isPaused", "isPaused():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPaused(): ethereum.CallResult<boolean> {
    const result = super.tryCall("isPaused", "isPaused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSilo(_silo: Address): boolean {
    const result = super.call("isSilo", "isSilo(address):(bool)", [
      ethereum.Value.fromAddress(_silo)
    ]);

    return result[0].toBoolean();
  }

  try_isSilo(_silo: Address): ethereum.CallResult<boolean> {
    const result = super.tryCall("isSilo", "isSilo(address):(bool)", [
      ethereum.Value.fromAddress(_silo)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSiloPaused(_silo: Address, _asset: Address): boolean {
    const result = super.call(
      "isSiloPaused",
      "isSiloPaused(address,address):(bool)",
      [ethereum.Value.fromAddress(_silo), ethereum.Value.fromAddress(_asset)]
    );

    return result[0].toBoolean();
  }

  try_isSiloPaused(
    _silo: Address,
    _asset: Address
  ): ethereum.CallResult<boolean> {
    const result = super.tryCall(
      "isSiloPaused",
      "isSiloPaused(address,address):(bool)",
      [ethereum.Value.fromAddress(_silo), ethereum.Value.fromAddress(_asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  manager(): Address {
    const result = super.call("manager", "manager():(address)", []);

    return result[0].toAddress();
  }

  try_manager(): ethereum.CallResult<Address> {
    const result = super.tryCall("manager", "manager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxLiquidity(): SiloRepository__maxLiquidityResult {
    const result = super.call(
      "maxLiquidity",
      "maxLiquidity():(bool,uint256)",
      []
    );

    return new SiloRepository__maxLiquidityResult(
      result[0].toBoolean(),
      result[1].toBigInt()
    );
  }

  try_maxLiquidity(): ethereum.CallResult<SiloRepository__maxLiquidityResult> {
    const result = super.tryCall(
      "maxLiquidity",
      "maxLiquidity():(bool,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(
      new SiloRepository__maxLiquidityResult(
        value[0].toBoolean(),
        value[1].toBigInt()
      )
    );
  }

  newSilo(_siloAsset: Address, _siloData: Bytes): Address {
    const result = super.call("newSilo", "newSilo(address,bytes):(address)", [
      ethereum.Value.fromAddress(_siloAsset),
      ethereum.Value.fromBytes(_siloData)
    ]);

    return result[0].toAddress();
  }

  try_newSilo(
    _siloAsset: Address,
    _siloData: Bytes
  ): ethereum.CallResult<Address> {
    const result = super.tryCall("newSilo", "newSilo(address,bytes):(address)", [
      ethereum.Value.fromAddress(_siloAsset),
      ethereum.Value.fromBytes(_siloData)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    const result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    const result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingOwner(): Address {
    const result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    const result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  priceProvidersRepository(): Address {
    const result = super.call(
      "priceProvidersRepository",
      "priceProvidersRepository():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_priceProvidersRepository(): ethereum.CallResult<Address> {
    const result = super.tryCall(
      "priceProvidersRepository",
      "priceProvidersRepository():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolLiquidationFee(): BigInt {
    const result = super.call(
      "protocolLiquidationFee",
      "protocolLiquidationFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_protocolLiquidationFee(): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "protocolLiquidationFee",
      "protocolLiquidationFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  protocolShareFee(): BigInt {
    const result = super.call(
      "protocolShareFee",
      "protocolShareFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_protocolShareFee(): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "protocolShareFee",
      "protocolShareFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  replaceSilo(
    _siloAsset: Address,
    _siloVersion: BigInt,
    _siloData: Bytes
  ): Address {
    const result = super.call(
      "replaceSilo",
      "replaceSilo(address,uint128,bytes):(address)",
      [
        ethereum.Value.fromAddress(_siloAsset),
        ethereum.Value.fromUnsignedBigInt(_siloVersion),
        ethereum.Value.fromBytes(_siloData)
      ]
    );

    return result[0].toAddress();
  }

  try_replaceSilo(
    _siloAsset: Address,
    _siloVersion: BigInt,
    _siloData: Bytes
  ): ethereum.CallResult<Address> {
    const result = super.tryCall(
      "replaceSilo",
      "replaceSilo(address,uint128,bytes):(address)",
      [
        ethereum.Value.fromAddress(_siloAsset),
        ethereum.Value.fromUnsignedBigInt(_siloVersion),
        ethereum.Value.fromBytes(_siloData)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  router(): Address {
    const result = super.call("router", "router():(address)", []);

    return result[0].toAddress();
  }

  try_router(): ethereum.CallResult<Address> {
    const result = super.tryCall("router", "router():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  siloFactory(param0: BigInt): Address {
    const result = super.call("siloFactory", "siloFactory(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_siloFactory(param0: BigInt): ethereum.CallResult<Address> {
    const result = super.tryCall(
      "siloFactory",
      "siloFactory(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  siloRepositoryPing(): Bytes {
    const result = super.call(
      "siloRepositoryPing",
      "siloRepositoryPing():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_siloRepositoryPing(): ethereum.CallResult<Bytes> {
    const result = super.tryCall(
      "siloRepositoryPing",
      "siloRepositoryPing():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  siloReverse(param0: Address): Address {
    const result = super.call("siloReverse", "siloReverse(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_siloReverse(param0: Address): ethereum.CallResult<Address> {
    const result = super.tryCall(
      "siloReverse",
      "siloReverse(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  siloVersion(): SiloRepository__siloVersionResult {
    const result = super.call(
      "siloVersion",
      "siloVersion():(uint128,uint128)",
      []
    );

    return new SiloRepository__siloVersionResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_siloVersion(): ethereum.CallResult<SiloRepository__siloVersionResult> {
    const result = super.tryCall(
      "siloVersion",
      "siloVersion():(uint128,uint128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(
      new SiloRepository__siloVersionResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  tokensFactory(): Address {
    const result = super.call("tokensFactory", "tokensFactory():(address)", []);

    return result[0].toAddress();
  }

  try_tokensFactory(): ethereum.CallResult<Address> {
    const result = super.tryCall(
      "tokensFactory",
      "tokensFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _siloFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokensFactory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _defaultMaxLTV(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _defaultLiquidationThreshold(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _initialBridgeAssets(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AddBridgeAssetCall extends ethereum.Call {
  get inputs(): AddBridgeAssetCall__Inputs {
    return new AddBridgeAssetCall__Inputs(this);
  }

  get outputs(): AddBridgeAssetCall__Outputs {
    return new AddBridgeAssetCall__Outputs(this);
  }
}

export class AddBridgeAssetCall__Inputs {
  _call: AddBridgeAssetCall;

  constructor(call: AddBridgeAssetCall) {
    this._call = call;
  }

  get _newBridgeAsset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddBridgeAssetCall__Outputs {
  _call: AddBridgeAssetCall;

  constructor(call: AddBridgeAssetCall) {
    this._call = call;
  }
}

export class ChangeManagerCall extends ethereum.Call {
  get inputs(): ChangeManagerCall__Inputs {
    return new ChangeManagerCall__Inputs(this);
  }

  get outputs(): ChangeManagerCall__Outputs {
    return new ChangeManagerCall__Outputs(this);
  }
}

export class ChangeManagerCall__Inputs {
  _call: ChangeManagerCall;

  constructor(call: ChangeManagerCall) {
    this._call = call;
  }

  get _manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeManagerCall__Outputs {
  _call: ChangeManagerCall;

  constructor(call: ChangeManagerCall) {
    this._call = call;
  }
}

export class NewSiloCall extends ethereum.Call {
  get inputs(): NewSiloCall__Inputs {
    return new NewSiloCall__Inputs(this);
  }

  get outputs(): NewSiloCall__Outputs {
    return new NewSiloCall__Outputs(this);
  }
}

export class NewSiloCall__Inputs {
  _call: NewSiloCall;

  constructor(call: NewSiloCall) {
    this._call = call;
  }

  get _siloAsset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _siloData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class NewSiloCall__Outputs {
  _call: NewSiloCall;

  constructor(call: NewSiloCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RegisterSiloVersionCall extends ethereum.Call {
  get inputs(): RegisterSiloVersionCall__Inputs {
    return new RegisterSiloVersionCall__Inputs(this);
  }

  get outputs(): RegisterSiloVersionCall__Outputs {
    return new RegisterSiloVersionCall__Outputs(this);
  }
}

export class RegisterSiloVersionCall__Inputs {
  _call: RegisterSiloVersionCall;

  constructor(call: RegisterSiloVersionCall) {
    this._call = call;
  }

  get _factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _isDefault(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class RegisterSiloVersionCall__Outputs {
  _call: RegisterSiloVersionCall;

  constructor(call: RegisterSiloVersionCall) {
    this._call = call;
  }
}

export class RemoveBridgeAssetCall extends ethereum.Call {
  get inputs(): RemoveBridgeAssetCall__Inputs {
    return new RemoveBridgeAssetCall__Inputs(this);
  }

  get outputs(): RemoveBridgeAssetCall__Outputs {
    return new RemoveBridgeAssetCall__Outputs(this);
  }
}

export class RemoveBridgeAssetCall__Inputs {
  _call: RemoveBridgeAssetCall;

  constructor(call: RemoveBridgeAssetCall) {
    this._call = call;
  }

  get _bridgeAssetToRemove(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveBridgeAssetCall__Outputs {
  _call: RemoveBridgeAssetCall;

  constructor(call: RemoveBridgeAssetCall) {
    this._call = call;
  }
}

export class RemovePendingOwnershipCall extends ethereum.Call {
  get inputs(): RemovePendingOwnershipCall__Inputs {
    return new RemovePendingOwnershipCall__Inputs(this);
  }

  get outputs(): RemovePendingOwnershipCall__Outputs {
    return new RemovePendingOwnershipCall__Outputs(this);
  }
}

export class RemovePendingOwnershipCall__Inputs {
  _call: RemovePendingOwnershipCall;

  constructor(call: RemovePendingOwnershipCall) {
    this._call = call;
  }
}

export class RemovePendingOwnershipCall__Outputs {
  _call: RemovePendingOwnershipCall;

  constructor(call: RemovePendingOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ReplaceSiloCall extends ethereum.Call {
  get inputs(): ReplaceSiloCall__Inputs {
    return new ReplaceSiloCall__Inputs(this);
  }

  get outputs(): ReplaceSiloCall__Outputs {
    return new ReplaceSiloCall__Outputs(this);
  }
}

export class ReplaceSiloCall__Inputs {
  _call: ReplaceSiloCall;

  constructor(call: ReplaceSiloCall) {
    this._call = call;
  }

  get _siloAsset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _siloVersion(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _siloData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ReplaceSiloCall__Outputs {
  _call: ReplaceSiloCall;

  constructor(call: ReplaceSiloCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SetAssetConfigCall extends ethereum.Call {
  get inputs(): SetAssetConfigCall__Inputs {
    return new SetAssetConfigCall__Inputs(this);
  }

  get outputs(): SetAssetConfigCall__Outputs {
    return new SetAssetConfigCall__Outputs(this);
  }
}

export class SetAssetConfigCall__Inputs {
  _call: SetAssetConfigCall;

  constructor(call: SetAssetConfigCall) {
    this._call = call;
  }

  get _silo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _asset(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _assetConfig(): SetAssetConfigCall_assetConfigStruct {
    return changetype<SetAssetConfigCall_assetConfigStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class SetAssetConfigCall__Outputs {
  _call: SetAssetConfigCall;

  constructor(call: SetAssetConfigCall) {
    this._call = call;
  }
}

export class SetAssetConfigCall_assetConfigStruct extends ethereum.Tuple {
  get maxLoanToValue(): BigInt {
    return this[0].toBigInt();
  }

  get liquidationThreshold(): BigInt {
    return this[1].toBigInt();
  }

  get interestRateModel(): Address {
    return this[2].toAddress();
  }
}

export class SetDefaultInterestRateModelCall extends ethereum.Call {
  get inputs(): SetDefaultInterestRateModelCall__Inputs {
    return new SetDefaultInterestRateModelCall__Inputs(this);
  }

  get outputs(): SetDefaultInterestRateModelCall__Outputs {
    return new SetDefaultInterestRateModelCall__Outputs(this);
  }
}

export class SetDefaultInterestRateModelCall__Inputs {
  _call: SetDefaultInterestRateModelCall;

  constructor(call: SetDefaultInterestRateModelCall) {
    this._call = call;
  }

  get _defaultInterestRateModel(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDefaultInterestRateModelCall__Outputs {
  _call: SetDefaultInterestRateModelCall;

  constructor(call: SetDefaultInterestRateModelCall) {
    this._call = call;
  }
}

export class SetDefaultLiquidationThresholdCall extends ethereum.Call {
  get inputs(): SetDefaultLiquidationThresholdCall__Inputs {
    return new SetDefaultLiquidationThresholdCall__Inputs(this);
  }

  get outputs(): SetDefaultLiquidationThresholdCall__Outputs {
    return new SetDefaultLiquidationThresholdCall__Outputs(this);
  }
}

export class SetDefaultLiquidationThresholdCall__Inputs {
  _call: SetDefaultLiquidationThresholdCall;

  constructor(call: SetDefaultLiquidationThresholdCall) {
    this._call = call;
  }

  get _defaultLiquidationThreshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDefaultLiquidationThresholdCall__Outputs {
  _call: SetDefaultLiquidationThresholdCall;

  constructor(call: SetDefaultLiquidationThresholdCall) {
    this._call = call;
  }
}

export class SetDefaultMaximumLTVCall extends ethereum.Call {
  get inputs(): SetDefaultMaximumLTVCall__Inputs {
    return new SetDefaultMaximumLTVCall__Inputs(this);
  }

  get outputs(): SetDefaultMaximumLTVCall__Outputs {
    return new SetDefaultMaximumLTVCall__Outputs(this);
  }
}

export class SetDefaultMaximumLTVCall__Inputs {
  _call: SetDefaultMaximumLTVCall;

  constructor(call: SetDefaultMaximumLTVCall) {
    this._call = call;
  }

  get _defaultMaxLTV(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDefaultMaximumLTVCall__Outputs {
  _call: SetDefaultMaximumLTVCall;

  constructor(call: SetDefaultMaximumLTVCall) {
    this._call = call;
  }
}

export class SetDefaultSiloMaxDepositsLimitCall extends ethereum.Call {
  get inputs(): SetDefaultSiloMaxDepositsLimitCall__Inputs {
    return new SetDefaultSiloMaxDepositsLimitCall__Inputs(this);
  }

  get outputs(): SetDefaultSiloMaxDepositsLimitCall__Outputs {
    return new SetDefaultSiloMaxDepositsLimitCall__Outputs(this);
  }
}

export class SetDefaultSiloMaxDepositsLimitCall__Inputs {
  _call: SetDefaultSiloMaxDepositsLimitCall;

  constructor(call: SetDefaultSiloMaxDepositsLimitCall) {
    this._call = call;
  }

  get _maxDeposits(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDefaultSiloMaxDepositsLimitCall__Outputs {
  _call: SetDefaultSiloMaxDepositsLimitCall;

  constructor(call: SetDefaultSiloMaxDepositsLimitCall) {
    this._call = call;
  }
}

export class SetDefaultSiloVersionCall extends ethereum.Call {
  get inputs(): SetDefaultSiloVersionCall__Inputs {
    return new SetDefaultSiloVersionCall__Inputs(this);
  }

  get outputs(): SetDefaultSiloVersionCall__Outputs {
    return new SetDefaultSiloVersionCall__Outputs(this);
  }
}

export class SetDefaultSiloVersionCall__Inputs {
  _call: SetDefaultSiloVersionCall;

  constructor(call: SetDefaultSiloVersionCall) {
    this._call = call;
  }

  get _defaultVersion(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDefaultSiloVersionCall__Outputs {
  _call: SetDefaultSiloVersionCall;

  constructor(call: SetDefaultSiloVersionCall) {
    this._call = call;
  }
}

export class SetFeesCall extends ethereum.Call {
  get inputs(): SetFeesCall__Inputs {
    return new SetFeesCall__Inputs(this);
  }

  get outputs(): SetFeesCall__Outputs {
    return new SetFeesCall__Outputs(this);
  }
}

export class SetFeesCall__Inputs {
  _call: SetFeesCall;

  constructor(call: SetFeesCall) {
    this._call = call;
  }

  get _fees(): SetFeesCall_feesStruct {
    return changetype<SetFeesCall_feesStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetFeesCall__Outputs {
  _call: SetFeesCall;

  constructor(call: SetFeesCall) {
    this._call = call;
  }
}

export class SetFeesCall_feesStruct extends ethereum.Tuple {
  get entryFee(): BigInt {
    return this[0].toBigInt();
  }

  get protocolShareFee(): BigInt {
    return this[1].toBigInt();
  }

  get protocolLiquidationFee(): BigInt {
    return this[2].toBigInt();
  }
}

export class SetGlobalPauseCall extends ethereum.Call {
  get inputs(): SetGlobalPauseCall__Inputs {
    return new SetGlobalPauseCall__Inputs(this);
  }

  get outputs(): SetGlobalPauseCall__Outputs {
    return new SetGlobalPauseCall__Outputs(this);
  }
}

export class SetGlobalPauseCall__Inputs {
  _call: SetGlobalPauseCall;

  constructor(call: SetGlobalPauseCall) {
    this._call = call;
  }

  get _globalPause(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetGlobalPauseCall__Outputs {
  _call: SetGlobalPauseCall;

  constructor(call: SetGlobalPauseCall) {
    this._call = call;
  }
}

export class SetLimitedMaxLiquidityCall extends ethereum.Call {
  get inputs(): SetLimitedMaxLiquidityCall__Inputs {
    return new SetLimitedMaxLiquidityCall__Inputs(this);
  }

  get outputs(): SetLimitedMaxLiquidityCall__Outputs {
    return new SetLimitedMaxLiquidityCall__Outputs(this);
  }
}

export class SetLimitedMaxLiquidityCall__Inputs {
  _call: SetLimitedMaxLiquidityCall;

  constructor(call: SetLimitedMaxLiquidityCall) {
    this._call = call;
  }

  get _globalLimit(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetLimitedMaxLiquidityCall__Outputs {
  _call: SetLimitedMaxLiquidityCall;

  constructor(call: SetLimitedMaxLiquidityCall) {
    this._call = call;
  }
}

export class SetNotificationReceiverCall extends ethereum.Call {
  get inputs(): SetNotificationReceiverCall__Inputs {
    return new SetNotificationReceiverCall__Inputs(this);
  }

  get outputs(): SetNotificationReceiverCall__Outputs {
    return new SetNotificationReceiverCall__Outputs(this);
  }
}

export class SetNotificationReceiverCall__Inputs {
  _call: SetNotificationReceiverCall;

  constructor(call: SetNotificationReceiverCall) {
    this._call = call;
  }

  get _silo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newNotificationReceiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetNotificationReceiverCall__Outputs {
  _call: SetNotificationReceiverCall;

  constructor(call: SetNotificationReceiverCall) {
    this._call = call;
  }
}

export class SetPriceProvidersRepositoryCall extends ethereum.Call {
  get inputs(): SetPriceProvidersRepositoryCall__Inputs {
    return new SetPriceProvidersRepositoryCall__Inputs(this);
  }

  get outputs(): SetPriceProvidersRepositoryCall__Outputs {
    return new SetPriceProvidersRepositoryCall__Outputs(this);
  }
}

export class SetPriceProvidersRepositoryCall__Inputs {
  _call: SetPriceProvidersRepositoryCall;

  constructor(call: SetPriceProvidersRepositoryCall) {
    this._call = call;
  }

  get _repository(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPriceProvidersRepositoryCall__Outputs {
  _call: SetPriceProvidersRepositoryCall;

  constructor(call: SetPriceProvidersRepositoryCall) {
    this._call = call;
  }
}

export class SetRouterCall extends ethereum.Call {
  get inputs(): SetRouterCall__Inputs {
    return new SetRouterCall__Inputs(this);
  }

  get outputs(): SetRouterCall__Outputs {
    return new SetRouterCall__Outputs(this);
  }
}

export class SetRouterCall__Inputs {
  _call: SetRouterCall;

  constructor(call: SetRouterCall) {
    this._call = call;
  }

  get _router(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRouterCall__Outputs {
  _call: SetRouterCall;

  constructor(call: SetRouterCall) {
    this._call = call;
  }
}

export class SetSiloMaxDepositsLimitCall extends ethereum.Call {
  get inputs(): SetSiloMaxDepositsLimitCall__Inputs {
    return new SetSiloMaxDepositsLimitCall__Inputs(this);
  }

  get outputs(): SetSiloMaxDepositsLimitCall__Outputs {
    return new SetSiloMaxDepositsLimitCall__Outputs(this);
  }
}

export class SetSiloMaxDepositsLimitCall__Inputs {
  _call: SetSiloMaxDepositsLimitCall;

  constructor(call: SetSiloMaxDepositsLimitCall) {
    this._call = call;
  }

  get _silo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _asset(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _maxDeposits(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetSiloMaxDepositsLimitCall__Outputs {
  _call: SetSiloMaxDepositsLimitCall;

  constructor(call: SetSiloMaxDepositsLimitCall) {
    this._call = call;
  }
}

export class SetSiloPauseCall extends ethereum.Call {
  get inputs(): SetSiloPauseCall__Inputs {
    return new SetSiloPauseCall__Inputs(this);
  }

  get outputs(): SetSiloPauseCall__Outputs {
    return new SetSiloPauseCall__Outputs(this);
  }
}

export class SetSiloPauseCall__Inputs {
  _call: SetSiloPauseCall;

  constructor(call: SetSiloPauseCall) {
    this._call = call;
  }

  get _silo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _asset(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _pauseValue(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetSiloPauseCall__Outputs {
  _call: SetSiloPauseCall;

  constructor(call: SetSiloPauseCall) {
    this._call = call;
  }
}

export class SetTokensFactoryCall extends ethereum.Call {
  get inputs(): SetTokensFactoryCall__Inputs {
    return new SetTokensFactoryCall__Inputs(this);
  }

  get outputs(): SetTokensFactoryCall__Outputs {
    return new SetTokensFactoryCall__Outputs(this);
  }
}

export class SetTokensFactoryCall__Inputs {
  _call: SetTokensFactoryCall;

  constructor(call: SetTokensFactoryCall) {
    this._call = call;
  }

  get _tokensFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTokensFactoryCall__Outputs {
  _call: SetTokensFactoryCall;

  constructor(call: SetTokensFactoryCall) {
    this._call = call;
  }
}

export class SetVersionForAssetCall extends ethereum.Call {
  get inputs(): SetVersionForAssetCall__Inputs {
    return new SetVersionForAssetCall__Inputs(this);
  }

  get outputs(): SetVersionForAssetCall__Outputs {
    return new SetVersionForAssetCall__Outputs(this);
  }
}

export class SetVersionForAssetCall__Inputs {
  _call: SetVersionForAssetCall;

  constructor(call: SetVersionForAssetCall) {
    this._call = call;
  }

  get _siloAsset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _version(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetVersionForAssetCall__Outputs {
  _call: SetVersionForAssetCall;

  constructor(call: SetVersionForAssetCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class TransferPendingOwnershipCall extends ethereum.Call {
  get inputs(): TransferPendingOwnershipCall__Inputs {
    return new TransferPendingOwnershipCall__Inputs(this);
  }

  get outputs(): TransferPendingOwnershipCall__Outputs {
    return new TransferPendingOwnershipCall__Outputs(this);
  }
}

export class TransferPendingOwnershipCall__Inputs {
  _call: TransferPendingOwnershipCall;

  constructor(call: TransferPendingOwnershipCall) {
    this._call = call;
  }

  get newPendingOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferPendingOwnershipCall__Outputs {
  _call: TransferPendingOwnershipCall;

  constructor(call: TransferPendingOwnershipCall) {
    this._call = call;
  }
}

export class UnregisterSiloVersionCall extends ethereum.Call {
  get inputs(): UnregisterSiloVersionCall__Inputs {
    return new UnregisterSiloVersionCall__Inputs(this);
  }

  get outputs(): UnregisterSiloVersionCall__Outputs {
    return new UnregisterSiloVersionCall__Outputs(this);
  }
}

export class UnregisterSiloVersionCall__Inputs {
  _call: UnregisterSiloVersionCall;

  constructor(call: UnregisterSiloVersionCall) {
    this._call = call;
  }

  get _siloVersion(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnregisterSiloVersionCall__Outputs {
  _call: UnregisterSiloVersionCall;

  constructor(call: UnregisterSiloVersionCall) {
    this._call = call;
  }
}
